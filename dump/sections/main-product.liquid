{% section 'header' %}

<style>
.single-product-page {
  display: flex;
  background: #000;
  color: #fff;
  font-family: 'Oswald', Arial, sans-serif;
  min-height: 100vh;
  padding: 0 0 40px 0;
}
.product-info-block {
  flex: 1 1 50%;
  padding: 60px 40px 0 80px;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}
.product-breadcrumb {
  font-size: 0.95rem;
  color: #aaa;
  margin-bottom: 18px;
  text-transform: uppercase;
  letter-spacing: 1px;
}
.product-title {
  font-size: 3.2rem;
  font-weight: 900;
  text-transform: uppercase;
  margin-bottom: 18px;
  line-height: 1.05;
  color: #fff;
}
.product-desc {
  font-size: 1.1rem;
  font-weight: 600;
  margin-bottom: 28px;
  color: #fff;
  max-width: 600px;
}
.product-tabs {
  display: flex;
  gap: 24px;
  margin-bottom: 32px;
}
.product-tabs span {
  color: #888;
  font-size: 1rem;
  font-weight: 700;
  text-transform: uppercase;
  cursor: pointer;
  letter-spacing: 1px;
  transition: color 0.2s;
}
.product-tabs span.active,
.product-tabs span:hover {
  color: #fff;
  border-bottom: 2px solid #fff;
}
.product-options {
  margin-bottom: 32px;
}
.product-options label {
  font-size: 1.1rem;
  font-weight: 700;
  margin-bottom: 8px;
  display: block;
  text-transform: uppercase;
}
.product-sizes, .product-colors {
  display: flex;
  gap: 10px;
  margin-bottom: 18px;
}
.product-sizes button,
.product-colors button {
  background: transparent;
  color: #fff;
  border: 1.5px solid #fff;
  font-family: 'Oswald', Arial, sans-serif;
  font-size: 1rem;
  font-weight: 700;
  padding: 8px 18px;
  border-radius: 0;
  cursor: pointer;
  transition: background 0.2s, color 0.2s;
}
.product-sizes button.selected,
.product-sizes button:hover,
.product-colors button.selected,
.product-colors button:hover {
  background: #fff;
  color: #000;
}
.size-guide-link {
  font-size: 1.1rem;
  font-weight: 900;
  text-transform: uppercase;
  margin-left: 18px;
  color: #fff;
  text-decoration: none;
  display: inline-flex;
  align-items: center;
  gap: 4px;
}
.size-guide-link svg {
  width: 18px;
  height: 18px;
  stroke: #fff;
}
.product-price-row {
  display: flex;
  align-items: flex-end;
  gap: 18px;
  margin-bottom: 10px;
}
.product-price {
  font-size: 2.2rem;
  font-weight: 900;
  color: #fff;
}
.product-old-price {
  font-size: 1.5rem;
  color: #888;
  text-decoration: line-through;
  font-weight: 700;
}
.product-shipping {
  font-size: 1rem;
  color: #aaa;
  margin-bottom: 18px;
  text-transform: uppercase;
  letter-spacing: 1px;
}
.add-to-cart-btn {
  width: 220px;
  padding: 16px 0;
  background: #fff;
  color: #000;
  border: none;
  font-family: 'Oswald', Arial, sans-serif;
  font-size: 1.1rem;
  font-weight: 900;
  text-transform: uppercase;
  letter-spacing: 1px;
  cursor: pointer;
  transition: background 0.2s, color 0.2s;
}
.add-to-cart-btn:hover {
  background: #000;
  color: #fff;
  border: 1.5px solid #fff;
}
.product-gallery-block {
  flex: 1 1 50%;
  display: flex;
  align-items: flex-start;
  justify-content: center;
  gap: 24px;
  padding: 60px 40px 0 0;
}
.product-main-image {
  width: 420px;
  height: 560px;
  background: #111;
  background-size: cover;
  background-position: center;
  border: 1.5px solid #222;
  margin-right: 12px;
}
.product-thumbs {
  display: flex;
  flex-direction: column;
  gap: 10px;
}
.product-thumb {
  width: 70px;
  height: 90px;
  background: #222;
  background-size: cover;
  background-position: center;
  border: 1.5px solid #444;
  cursor: pointer;
  opacity: 0.7;
  transition: opacity 0.2s, border 0.2s;
}
.product-thumb.selected,
.product-thumb:hover {
  opacity: 1;
  border: 1.5px solid #fff;
}
@media (max-width: 1100px) {
  .single-product-page { flex-direction: column; }
  .product-info-block, .product-gallery-block { padding: 32px 16px 0 16px; }
  .product-main-image { width: 100%; height: 400px; }
  .product-gallery-block { flex-direction: column; align-items: center; }
}
.cart-drawer-overlay {
  position: fixed; top: 0; right: 0; width: 100vw; height: 100vh;
  background: rgba(0,0,0,0.7); z-index: 9999; display: flex; justify-content: flex-end;
}
.cart-drawer {
  background: #000; color: #fff; width: 420px; max-width: 100vw; height: 100vh; display: flex; flex-direction: column;
  box-shadow: -2px 0 24px rgba(0,0,0,0.5);
}
.cart-drawer-header {
  display: flex; justify-content: space-between; align-items: center; padding: 24px 24px 12px 24px; border-bottom: 1px solid #222;
}
.cart-drawer-title { font-size: 1.3rem; font-family: 'Oswald', Arial, sans-serif; }
.cart-drawer-close { background: none; border: none; color: #fff; font-size: 2.2rem; cursor: pointer; }
.cart-drawer-footer {
  margin-top: auto; padding: 24px; border-top: 1px solid #222; background: #000;
}
.cart-drawer-subtotal-row { display: flex; justify-content: space-between; align-items: flex-end; margin-bottom: 18px; }
.cart-drawer-subtitle { color: #888; font-size: 0.95rem; text-transform: uppercase; }
.cart-drawer-subtotal-label { font-size: 1.2rem; font-weight: 900; font-family: 'Oswald', Arial, sans-serif; }
.cart-drawer-subtotal-amount { font-size: 2rem; font-weight: 900; font-family: 'Oswald', Arial, sans-serif; }
.cart-drawer-checkout {
  width: 100%; padding: 18px 0; background: #fff; color: #000; border: none; font-size: 1.1rem; font-weight: 900;
  text-transform: uppercase; font-family: 'Oswald', Arial, sans-serif; cursor: pointer; transition: background 0.2s, color 0.2s;
}
.cart-drawer-checkout:hover { background: #000; color: #fff; border: 1.5px solid #fff; }
.cart-drawer-item {
  display: flex; align-items: center; border-bottom: 1px solid #222; padding: 18px 24px;
}
.cart-drawer-item-img { width: 80px; height: 100px; object-fit: cover; margin-right: 18px; }
.cart-drawer-item-info { flex: 1; }
.cart-drawer-item-title { font-size: 1.1rem; font-weight: 900; font-family: 'Oswald', Arial, sans-serif; }
.cart-drawer-item-variant { color: #aaa; font-size: 0.95rem; margin-bottom: 8px; }
.cart-drawer-item-price { font-size: 1.1rem; font-weight: 700; }
.cart-drawer-qty-row { display: flex; align-items: center; gap: 8px; margin-top: 8px; }
.cart-drawer-qty-btn {
  background: #000; color: #fff; border: 1px solid #fff; width: 32px; height: 32px; font-size: 1.2rem; font-family: 'Oswald', Arial, sans-serif;
  cursor: pointer; transition: background 0.2s, color 0.2s;
}
.cart-drawer-qty-btn:hover { background: #fff; color: #000; }
.cart-drawer-remove { background: none; border: none; color: #fff; font-size: 1.5rem; cursor: pointer; margin-left: 12px; }
</style>

<div class="single-product-page">
  <div class="product-info-block">
    <div class="product-breadcrumb">
      <a href="/collections/all" style="color:#fff;text-decoration:none;">SHOP</a> / 
      {% if product.type %}<a href="#" style="color:#fff;text-decoration:none;">{{ product.type }}</a> / {% endif %}
      <span style="color:#fff;">{{ product.title }}</span>
    </div>
    <h1 class="product-title">{{ product.title }}</h1>
    <div class="product-desc">{{ product.description | strip_html | truncatewords: 30 }}</div>
    <div class="product-tabs">
      <span class="active">MATERIALS</span>
      <span>CARE</span>
      <span>SHIPPING</span>
    </div>
    <form method="post" action="/cart/add">
      <div class="product-options">
        <label>Size</label>
        <div class="product-sizes">
          {% for option in product.options_with_values %}
            {% if option.name == 'Size' %}
              {% for value in option.values %}
                <button type="button" class="size-btn" data-value="{{ value }}">{{ value }}</button>
              {% endfor %}
            {% endif %}
          {% endfor %}
        </div>
        <label>Color</label>
        <div class="product-colors">
          {% for option in product.options_with_values %}
            {% if option.name == 'Color' %}
              {% for value in option.values %}
                <button type="button" class="color-btn" data-value="{{ value }}">{{ value }}</button>
              {% endfor %}
            {% endif %}
          {% endfor %}
        </div>
        <a href="#" class="size-guide-link">SIZE GUIDE
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="m4.5 19.5 15-15m0 0H8.25m11.25 0v11.25" /></svg>
        </a>
      </div>
      <div class="product-price-row">
        <span class="product-price">{{ product.price | money }}</span>
        {% if product.compare_at_price > product.price %}
          <span class="product-old-price">{{ product.compare_at_price | money }}</span>
        {% endif %}
      </div>
      <div class="product-shipping">SHIPPING CALCULATED AT CHECKOUT</div>
      <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
      <button type="submit" class="add-to-cart-btn">ADD TO BAG</button>
<script>
document.querySelectorAll('.add-to-cart-btn').forEach(btn => {
  btn.addEventListener('click', function(e) {
    e.preventDefault();
    const form = btn.closest('form');
    const formData = new FormData(form);
    fetch('/cart/add.js', {
      method: 'POST',
      body: formData
    }).then(() => {
      fetch('/cart.js')
        .then(res => res.json())
        .then(cart => {
          var badge = document.querySelector('.cart-count');
          if (badge) badge.textContent = cart.item_count;
        });
    });
  });
});
</script>
    </form>
  </div>
  <div class="product-gallery-block">
    <div class="product-main-image" id="mainProductImage"
      style="background-image: url('{{ product.featured_image | img_url: 'master' }}');"></div>
    <div class="product-thumbs">
      {% for image in product.images %}
        <div class="product-thumb{% if forloop.first %} selected{% endif %}" 
          style="background-image: url('{{ image | img_url: 'compact' }}');"
          onclick="document.getElementById('mainProductImage').style.backgroundImage = 'url({{ image | img_url: 'master' }})'; this.parentNode.querySelectorAll('.product-thumb').forEach(t=>t.classList.remove('selected')); this.classList.add('selected');"></div>
      {% endfor %}
    </div>
  </div>
</div>

<div id="cart-drawer-overlay" class="cart-drawer-overlay" style="display:none;">
  <div class="cart-drawer">
    <div class="cart-drawer-header">
      <span class="cart-drawer-title"><b id="cart-drawer-count">0</b> ITEMS IN YOUR BAG.</span>
      <button class="cart-drawer-close" onclick="closeCartDrawer()">&times;</button>
    </div>
    <div id="cart-drawer-items"></div>
    <div class="cart-drawer-footer">
      <div class="cart-drawer-subtotal-row">
        <div>
          <div class="cart-drawer-subtitle">SHIPPING & TAXES</div>
          <div class="cart-drawer-subtotal-label">SUBTOTAL</div>
        </div>
        <div>
          <div class="cart-drawer-subtitle">CALCULATED AT CHECKOUT</div>
          <div class="cart-drawer-subtotal-amount" id="cart-drawer-subtotal">₹0.00</div>
        </div>
      </div>
      <button class="cart-drawer-checkout" onclick="window.location='/checkout'">PROCEED TO CHECKOUT</button>
    </div>
  </div>
</div>

{% section 'footer' %}

<script>
if (typeof Shopify === 'undefined') Shopify = {};
Shopify.formatMoney = Shopify.formatMoney || function(cents, format) {
  if (typeof cents === 'string') {
    cents = cents.replace('.', '');
  }
  var value = (cents / 100).toFixed(2);
  var formattedValue = '₹' + value;
  
  // If a format string is provided, use it
  if (typeof format !== 'undefined') {
    return format.replace('{{amount}}', value).replace('{{amount_with_comma_separator}}', value.replace('.', ','));
  }
  
  return formattedValue;
};

function openCartDrawer() {
  document.getElementById('cart-drawer-overlay').style.display = 'flex';
  fetchCartDrawer();
}
function closeCartDrawer() {
  document.getElementById('cart-drawer-overlay').style.display = 'none';
}
function fetchCartDrawer() {
  fetch('/cart.js')
    .then(res => res.json())
    .then(cart => {
      document.getElementById('cart-drawer-count').textContent = cart.item_count;
      var badge = document.querySelector('.cart-count');
      if (badge) badge.textContent = cart.item_count;
      document.getElementById('cart-drawer-subtotal').textContent = Shopify.formatMoney(cart.total_price);
      let html = '';
      cart.items.forEach(item => {
        html += `
          <div class="cart-drawer-item">
            <img src="${item.image}" class="cart-drawer-item-img" alt="${item.title}">
            <div class="cart-drawer-item-info">
              <div class="cart-drawer-item-title">${item.product_title}</div>
              <div class="cart-drawer-item-variant">${item.variant_title}</div>
              <div class="cart-drawer-item-price">${Shopify.formatMoney(item.price)}</div>
              <div class="cart-drawer-qty-row">
                <button class="cart-drawer-qty-btn" onclick="updateCartQty(${item.id}, ${item.quantity-1})">-</button>
                <span>${item.quantity}</span>
                <button class="cart-drawer-qty-btn" onclick="updateCartQty(${item.id}, ${item.quantity+1})">+</button>
                <button class="cart-drawer-remove" onclick="updateCartQty(${item.id}, 0)">&times;</button>
              </div>
            </div>
          </div>
        `;
      });
      document.getElementById('cart-drawer-items').innerHTML = html || '<div style=\"padding:32px;color:#888;\">Your bag is empty.</div>';
    });
}
function updateCartQty(id, qty) {
  fetch('/cart/change.js', {
    method: 'POST',
    headers: {'Content-Type': 'application/json'},
    body: JSON.stringify({id, quantity: qty})
  }).then(() => fetchCartDrawer())
  .catch(error => {
    console.error('Error updating cart quantity:', error);
    // Optionally show error message to user
  });
}
document.querySelectorAll('.add-to-cart-btn').forEach(btn => {
  btn.addEventListener('click', function(e) {
    e.preventDefault();
    const form = btn.closest('form');
    const formData = new FormData(form);
    fetch('/cart/add.js', {
      method: 'POST',
      body: formData
    }).then(() => {
      openCartDrawer();
    }).catch(error => {
      console.error('Error adding item to cart:', error);
      // Optionally show error message to user
    });
  });
});
</script>